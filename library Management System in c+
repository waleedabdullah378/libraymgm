#include <iostream>
#include <string>
#include <vector>

using namespace std;

// Book class to store book details
class Book {
public:
    int id;
    string title;
    string author;
    bool issued;

    Book(int bookId, string bookTitle, string bookAuthor) {
        id = bookId;
        title = bookTitle;
        author = bookAuthor;
        issued = false;
    }

    void displayBookInfo() {
        cout << "Book ID: " << id << "\nTitle: " << title << "\nAuthor: " << author << "\nIssued: " << (issued ? "Yes" : "No") << endl;
    }
};

// Library class to manage the collection of books
class Library {
private:
    vector<Book> books;

public:
    void addBook(int id, string title, string author) {
        Book newBook(id, title, author);
        books.push_back(newBook);
        cout << "Book added successfully!\n";
    }

    void displayAllBooks() {
        if (books.empty()) {
            cout << "No books in the library!\n";
            return;
        }
        for (auto &book : books) {
            book.displayBookInfo();
            cout << "-----------------------\n";
        }
    }

    void searchBookByTitle(string title) {
        for (auto &book : books) {
            if (book.title == title) {
                book.displayBookInfo();
                return;
            }
        }
        cout << "Book not found!\n";
    }

    void issueBook(int id) {
        for (auto &book : books) {
            if (book.id == id) {
                if (!book.issued) {
                    book.issued = true;
                    cout << "Book issued successfully!\n";
                } else {
                    cout << "Book already issued!\n";
                }
                return;
            }
        }
        cout << "Book not found!\n";
    }

    void returnBook(int id) {
        for (auto &book : books) {
            if (book.id == id) {
                if (book.issued) {
                    book.issued = false;
                    cout << "Book returned successfully!\n";
                } else {
                    cout << "Book was not issued!\n";
                }
                return;
            }
        }
        cout << "Book not found!\n";
    }
};

int main() {
    Library lib;
    int choice, id;
    string title, author;

    do {
        cout << "\nLibrary Management System Menu\n";
        cout << "1. Add Book\n";
        cout << "2. Display All Books\n";
        cout << "3. Search Book by Title\n";
        cout << "4. Issue Book\n";
        cout << "5. Return Book\n";
        cout << "6. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter Book ID: ";
                cin >> id;
                cin.ignore(); // to ignore newline character after id
                cout << "Enter Book Title: ";
                getline(cin, title);
                cout << "Enter Book Author: ";
                getline(cin, author);
                lib.addBook(id, title, author);
                break;
            case 2:
                lib.displayAllBooks();
                break;
            case 3:
                cout << "Enter Book Title: ";
                cin.ignore();
                getline(cin, title);
                lib.searchBookByTitle(title);
                break;
            case 4:
                cout << "Enter Book ID to issue: ";
                cin >> id;
                lib.issueBook(id);
                break;
            case 5:
                cout << "Enter Book ID to return: ";
                cin >> id;
                lib.returnBook(id);
                break;
            case 6:
                cout << "Exiting system...\n";
                break;
            default:
                cout << "Invalid choice! Please try again.\n";
        }
    } while (choice != 6);

    return 0;
}
